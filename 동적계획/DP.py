"""
알고리즘이 복합되서 나온다.
다이나믹 프로그래밍
이전 값을 재활용 하는 알고리즘
ex) 1-10 숫자 중, 각각 이전값들을 합한 값 구하기
- 이전 값을 활용해서 시간복잡도 줄일 수 있음
- O(N)
** 점화식을 구하는 것이 핵심

1. 아이디어: 주어진 n길이 높이가 2인 공간에 두칸짜리 직사각형이 얼마나 들어갈까?
A1:1, A2:2, A3:1+2... = An = An-1 + An-2
for문으로 3부터 N까지 돌면서
이전값과 그 이전값ㅇ르 더해서 저장
결과값은 10007로 나눈 나머지

2. 시간복잡도 = O(N)

3. 자료구조
- DP값 저장하는 (경우의 수) 배열 : int[]
- 최대값 : 10007보다 작음 > int
"""

import sys
input = sys.stdin.readline
n = int(input())
rs = [0,1,2]

for i in range(3, n+1):
    rs.append((rs[i-1] + rs[i-2])%10007)

print(rs[n])
"""
2
=2
9
=55
"""